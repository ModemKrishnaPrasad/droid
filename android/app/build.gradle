apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services" // Ensure this is added at the bottom

react {
    project.ext.react = [
        entryFile: "index.js" // Update this if your entry file is in a different location
    ]
    autolinkLibrariesWithApp()
}

// Define these variables at the top of the file, if they are not already defined elsewhere
def enableProguardInReleaseBuilds = false // Only define once
def jscFlavor = 'org.webkit:android-jsc:+' // Only define once

android {
    namespace "com.example.droid"  // Root namespace

    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    flavorDimensions "environment"  // Define a dimension to distinguish flavors
    productFlavors {
    staging {
        dimension "environment"
        applicationId "com.example.droid_stage"
        versionCode 3
        versionName "droid_stage"
        namespace "com.example.droid.stage"
        resValue "string", "droid_stage", "droid Staging"  // Set custom app name for staging
    }
    production {
        dimension "environment"
        applicationId "com.example.droid"
        versionCode 3
        versionName "droid"
        namespace "com.example.droid"
        resValue "string", "droid", "droid"  // Set custom app name for production
    }
}


    defaultConfig {
        applicationId "com.example.droid_stage"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        staging {
            storeFile file('staging.keystore') // Specify your staging keystore file
            storePassword 'android' // Replace with your staging password
            keyAlias 'stagingkey' // Replace with your staging key alias
            keyPassword 'android' // Replace with your staging key password
        }
        release {
            storeFile file('release.keystore') // Specify your release keystore file
            storePassword 'android' // Replace with your release password
            keyAlias 'releasekey' // Replace with your release key alias
            keyPassword 'android' // Replace with your release key password
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:33.5.1')

    // Firebase Analytics dependency
    implementation 'com.google.firebase:firebase-analytics'

    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Apply Google services at the bottom
apply plugin: 'com.google.gms.google-services'
tasks.register("installDebug") {
    dependsOn "installStagingDebug"
}