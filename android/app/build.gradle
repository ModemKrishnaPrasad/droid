// Apply necessary plugins
apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services' // Firebase Google services plugin

// React Native configuration block
react {
    autolinkLibrariesWithApp()
}

// Enable Proguard for release builds if needed
def enableProguardInReleaseBuilds = false

// Use the preferred build flavor of JavaScriptCore (JSC) or Hermes
def jscFlavor = 'org.webkit:android-jsc:+'

android {

    namespace "com.example.droid" // Make sure this matches the production package name

    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        staging {
            storeFile file('staging.keystore') // Specify your staging keystore file
            storePassword 'android' // Replace with your staging password
            keyAlias 'stagingkey' // Replace with your staging key alias
            keyPassword 'android' // Replace with your staging key password
        }
        release {
            storeFile file('release.keystore') // Specify your release keystore file
            storePassword 'android' // Replace with your release password
            keyAlias 'releasekey' // Replace with your release key alias
            keyPassword 'android' // Replace with your release key password
        }
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release // Use the release keystore
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    flavorDimensions "environment"  // Define a dimension to distinguish flavors
    productFlavors {
    staging {
        dimension "environment"
        applicationId "com.example.droid_stage"
        versionCode 2
        versionName "droid_stage"
        namespace "com.example.droid_stage"
        resValue "string", "droid_stage", "droid Staging"  // Set custom app name for staging
    }
    production {
        dimension "environment"
        applicationId "com.example.droid"
        versionCode 1
        versionName "droid"
        namespace "com.example.droid"
        resValue "string", "droid", "droid"  // Set custom app name for production
    }
}


    // Custom APK naming for each build variant
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def flavorName = variant.productFlavors[0]?.name ?: "release"
            def newName = "droid-${flavorName}-v${variant.versionName}.apk"
            outputFileName = newName
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    // Firebase and Google services
    implementation platform('com.google.firebase:firebase-bom:33.5.1')
    implementation 'com.google.firebase:firebase-analytics' // Add other Firebase products as needed
    implementation 'com.google.firebase:firebase-auth' // Add Firebase Auth if needed
    implementation 'com.google.firebase:firebase-database' // Add Firebase Realtime Database if needed

    // Hermes or JSC depending on your configuration
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Apply Google services at the bottom
apply plugin: 'com.google.gms.google-services'
